{{ define "content" }}
<div class="lg:container mx-auto p-4">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.3/echarts.min.js"></script>
  <h1 class="text-2xl font-semibold mb-4">Bitcoin Halving Schedule</h1>
  <div class="text-pretty border rounded-lg border-slate-700 bg-slate-950/30 p-4 mb-4">
    <p class="mb-4">The Bitcoin halving is an event occuring approximately every four years, or more precisely every 210,000 blocks. It halves the block reward miners receive, a mechanism designed to control the creation and distribution of new Bitcoin until the total supply reaches its cap.</p>
    <p class="mb-4">Although the Bitcoin Supply is commonly considered to be capped at 21 million BTC, the implementation of the halving schedule means that the actual supply will fall slightly short of this. The maximum amount of BTC that can ever be mined is 20,999,999.97690000.</p>
    <p class="mb-4">Over the years, additional factors have reduced Bitcoin's supply such as the <a class="text-sky-400/70 hover:underline hover:decoration-dotted hover:text-slate-200" href="/transaction/4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b">Genesis Block's</a> Coinbase output never being added to the UTXO set, as well as miner errors over the years which have destroyed BTC.</p>
    <p class="mb-4">burned.money tracks such events, providing a more realistic view of the Bitcoin supply.</p>
  </div>
  <div id="main" class="hidden lg:block w-full mx-auto mb-4" style="height: 600px;"></div>

  <script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
      var chartDom = document.getElementById('main');
      var myChart = echarts.init(chartDom, 'dark');
      var option;

      var latestBlock = {{ .LatestBlock.BlockHeight }};
      var blocks = {{ .Curve.Heights }};
      var supply = {{ .Curve.Supply }};
      var subsidy = {{ .Curve.Rewards }};
      var halvingDataLines = [];

      for (var i = 0; i < blocks.length; i++) {
        supply[i] = supply[i]/100000000.0;
        subsidy[i] = subsidy[i]/100000000.0;
        if (i > 0 && blocks[i] % 210000 == 0 && blocks[i] < 7000000) {
          halvingDataLines.push({
            symbol: 'none',
            label: { show: false },
            lineStyle: {
              opacity: 0.5
            },
            xAxis: i,
          });
        }

        if (blocks[i] == latestBlock) {
          halvingDataLines.push({
            symbol: 'circle',
            label: { show: true, formatter: "Latest Block " + latestBlock },
            lineStyle: {
              opacity: 1
            },
            xAxis: i,
          });
        }
      }

      option = {
        tooltip: {
          trigger: 'axis'
        },
        legend: {
          data: ['Block Subsidy', 'Theoretical Supply']
        },
        xAxis: {
          type: 'category',
          data: blocks
        },
        yAxis: [
          {
            type: 'value',
            name: 'Subsidy (BTC)',
            position: 'left',
            axisLabel: {
              formatter: '{value} BTC'
            }
          },
          {
            type: 'value',
            name: 'Supply (BTC)',
            position: 'right',
            axisLabel: {
              formatter: '{value} BTC'
            }
          }
        ],
        dataZoom: [
          {
            type: 'slider',
            show: true,
            xAxisIndex: [0],
            start: 0,
            end: 20
          },
          {
           type: 'inside',
           xAxisIndex: [0],
           start: 0,
           end: 100
          }
        ],
        series: [
          {
            name: 'Block Subsidy',
            type: 'line',
            yAxisIndex: 0,
            data: subsidy,
            markLine: {
              symbol: ['none', 'none'],
              label: { show: false },
              data: halvingDataLines
            }
          },
          {
            name: 'Theoretical Supply',
            type: 'line',
            yAxisIndex: 1,
            data: supply,
            markLine: {
              symbol: 'none',
              lineStyle: {
                opacity: 0.5
              },
              data: [
                {
                  name: 'Maximum Supply',
                  yAxis: 21000000
                }
              ]
            }
          }
        ]
      };

      option && myChart.setOption(option);
    });
  </script>

  <div class="w-full overflow-x-scroll">
  <table class="min-w-full bg-slate-950/30 border border-slate-700">
      <thead>
          <tr>
              <th class="px-4 py-2 border-b border-slate-700">Block Height</th>
              <th class="px-4 py-2 border-b border-slate-700">Mined On</th>
              <th class="px-4 py-2 border-b border-slate-700">Subsidy (BTC)</th>
              <th class="px-4 py-2 border-b border-slate-700">Subsidy (sats)</th>
              <th class="px-4 py-2 border-b border-slate-700">Binary</th>
              <th class="px-4 py-2 border-b border-slate-700">Theoretical Supply</th>
          </tr>
      </thead>
      <tbody>
          {{ range .Schedule }}
            {{ $bgc := "bg-emerald-800/30" }}
            {{ $block := index $.Blocks .Height }}
            {{ if $block.IsFutureBlock }}
              {{ $bgc = "bg-sky-800/30" }}
            {{ end }}
            <tr class="{{ $bgc }}">
              <td class="px-4 py-2 border-b border-slate-700"><a class="text-sky-400/70 hover:underline hover:decoration-dotted hover:text-slate-200" href="/block/{{ .Height }}">{{ .Height }}</a></td>
              <td class="px-4 py-2 border-b border-slate-700"><p>{{ $block.BlockTimestamp.UTC }}</p><p class="text-xs">{{ PrettyDuration $block.BlockTimestamp.UTC 2 }}</p></td>
              <td class="px-4 py-2 border-b border-slate-700">{{ (Int64ToBTC .Subsidy).SatoshisToBTC false }}</td>
              <td class="px-4 py-2 border-b border-slate-700 text-right">{{ .Subsidy }}</td>
              <td class="px-4 py-2 border-b border-slate-700">{{ printf "%b" .Subsidy }}</td>
              <td class="px-4 py-2 border-b border-slate-700">{{ (Int64ToBTC .Supply).SatoshisToBTC false }}</td>
          </tr>
          {{ end }}
      </tbody>
  </table>
  </div>
</div>
{{ end }}
