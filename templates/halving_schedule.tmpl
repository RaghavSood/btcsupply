{{ define "content" }}
<div class="container mx-auto p-4">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.3/echarts.min.js"></script>
  <h2 class="text-xl font-semibold mb-4">Bitcoin Halving Schedule</h2>
  <div id="main" class="min-w-full mx-auto mb-4" style="height: 600px;"></div>

  <script type="text/javascript">
    document.addEventListener('DOMContentLoaded', function () {
      var chartDom = document.getElementById('main');
      var myChart = echarts.init(chartDom, 'dark');
      var option;

      var blocks = {{ .Curve.Heights }};
      var supply = {{ .Curve.Supply }};
      var subsidy = {{ .Curve.Rewards }};
      var halvingDataLines = [];

      for (var i = 0; i < blocks.length; i++) {
        supply[i] = supply[i]/100000000.0;
        subsidy[i] = subsidy[i]/100000000.0;
        if (i > 0 && blocks[i] % 210000 == 0 && blocks[i] < 7000000) {
          halvingDataLines.push({
            xAxis: i,
          });
        }
      }

      option = {
        tooltip: {
          trigger: 'axis'
        },
        legend: {
          data: ['Block Subsidy', 'Theoretical Supply']
        },
        xAxis: {
          type: 'category',
          data: blocks
        },
        yAxis: [
          {
            type: 'value',
            name: 'Subsidy (BTC)',
            position: 'left',
            axisLabel: {
              formatter: '{value} BTC'
            }
          },
          {
            type: 'value',
            name: 'Supply (BTC)',
            position: 'right',
            axisLabel: {
              formatter: '{value} BTC'
            }
          }
        ],
        dataZoom: [
          {
            type: 'slider',
            show: true,
            xAxisIndex: [0],
            start: 0,
            end: 20
          },
          {
           type: 'inside',
           xAxisIndex: [0],
           start: 0,
           end: 100
          }
        ],
        series: [
          {
            name: 'Block Subsidy',
            type: 'line',
            yAxisIndex: 0,
            data: subsidy,
            markLine: {
              symbol: ['none', 'none'],
              label: { show: false },
              lineStyle: {
                opacity: 0.5
              },
              data: halvingDataLines
            }
          },
          {
            name: 'Theoretical Supply',
            type: 'line',
            yAxisIndex: 1,
            data: supply,
            markLine: {
              symbol: 'none',
              lineStyle: {
                opacity: 0.5
              },
              data: [
                {
                  name: 'Maximum Supply',
                  yAxis: 21000000
                }
              ]
            }
          }
        ]
      };

      option && myChart.setOption(option);
    });
  </script>

  <div class="overflow-x-scroll">
  <table class="min-w-full bg-slate-950/30 border border-slate-700">
      <thead>
          <tr>
              <th class="px-4 py-2 border-b border-slate-700">Block Height</th>
              <th class="px-4 py-2 border-b border-slate-700">Subsidy (BTC)</th>
              <th class="px-4 py-2 border-b border-slate-700">Subsidy (sats)</th>
              <th class="px-4 py-2 border-b border-slate-700">Binary</th>
              <th class="px-4 py-2 border-b border-slate-700">Theoretical Supply</th>
          </tr>
      </thead>
      <tbody>
          {{ range .Schedule }}
          <tr>
              <td class="px-4 py-2 border-b border-slate-700"><a class="text-sky-400/70 hover:underline hover:decoration-dotted hover:text-slate-200" href="/block/{{ .Height }}">{{ .Height }}</a></td>
              <td class="px-4 py-2 border-b border-slate-700">{{ Int64ToBTC .Subsidy }}</td>
              <td class="px-4 py-2 border-b border-slate-700 text-right">{{ .Subsidy }}</td>
              <td class="px-4 py-2 border-b border-slate-700">{{ printf "%b" .Subsidy }}</td>
              <td class="px-4 py-2 border-b border-slate-700">{{ Int64ToBTC .Supply }}</td>
          </tr>
          {{ end }}
      </tbody>
  </table>
  </div>
</div>
{{ end }}
