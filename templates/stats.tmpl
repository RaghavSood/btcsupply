{{ define "content" }}
<div class="lg:container mx-auto p-4">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/5.3.3/echarts.min.js"></script>
    <div class="border rounded-lg border-slate-700 bg-slate-950/30 p-4 mb-4">
      <h1 class="text-2xl font-semibold break-words">Stats</h1>
    </div>

    <div id="main" style="width: 100%; height: 600px;"></div>

    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var chartDom = document.getElementById('main');
            var myChart = echarts.init(chartDom, 'dark');
            var option;

            var heightLossSummary = {{ .HeightLossSummary }};
            var theoreticalSupply = {{ .TheoreticalSupply }};

            var blocks = [];
            var actualSupply = [];
            var expectedSupply = [];

            for (var i = 0; i < heightLossSummary.length; i++) {
                theoreticalSupplyBtc = theoreticalSupply[i].total_loss/100000000.0;
                burnedSupplyBtc = heightLossSummary[i].total_loss/100000000.0;
                circulatingSupplyBtc = theoreticalSupplyBtc - burnedSupplyBtc;
                blocks.push(heightLossSummary[i].block_height);
                actualSupply.push(circulatingSupplyBtc);
                expectedSupply.push(theoreticalSupplyBtc);
                console.log("Block: " + heightLossSummary[i].block_height + " Circulating Supply: " + circulatingSupplyBtc + " Theoretical Supply: " + theoreticalSupplyBtc);
            }

            option = {
                tooltip: {
                    trigger: 'axis'
                },
                legend: {
                    data: ['Circulating Supply', 'Theoretical Supply']
                },
                xAxis: {
                    type: 'category',
                    data: blocks
                },
                yAxis: {
                    type: 'value'
                },
                dataZoom: [
                    {
                        type: 'slider',
                        show: true,
                        xAxisIndex: [0],
                        start: 0,
                        end: 100
                    },
                    {
                        type: 'inside',
                        xAxisIndex: [0],
                        start: 0,
                        end: 100
                    }
                ],
                series: [
                    {
                        name: 'Circulating Supply',
                        type: 'line',
                        data: actualSupply
                    },
                    {
                        name: 'Theoretical Supply',
                        type: 'line',
                        data: expectedSupply
                    }
                ]
            };

            option && myChart.setOption(option);
        });
    </script>
</div>
{{ end }}

